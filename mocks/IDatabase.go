// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	sqlwrap "github.com/kornharem08/gorm"
	mock "github.com/stretchr/testify/mock"
)

// IDatabase is an autogenerated mock type for the IDatabase type
type IDatabase struct {
	mock.Mock
}

// Table provides a mock function with given fields: model
func (_m *IDatabase) Table(model interface{}) sqlwrap.ISQL {
	ret := _m.Called(model)

	if len(ret) == 0 {
		panic("no return value specified for Table")
	}

	var r0 sqlwrap.ISQL
	if rf, ok := ret.Get(0).(func(interface{}) sqlwrap.ISQL); ok {
		r0 = rf(model)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sqlwrap.ISQL)
		}
	}

	return r0
}

// NewIDatabase creates a new instance of IDatabase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDatabase(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDatabase {
	mock := &IDatabase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
